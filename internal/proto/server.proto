edition = "2023";

package gophkeeper;

option go_package = "gophkeeper/proto";

message User {
  string Login = 1;
  string Password = 2;
}

message RegistrationRequest {
  User User = 1;
}

message RegistrationResponse {
  string token = 1;
}

message AuthorizationRequest {
  User User = 1;
}

message AuthorizationResponse {
  string token = 1;
}

service Auth {
  rpc Register(RegistrationRequest) returns (RegistrationResponse);
  rpc Login(AuthorizationRequest) returns (AuthorizationResponse);
}

message Meta {
  string type = 1;
  string name = 2;
}

message FileUploadRequest {
  bytes chunk = 1;
  string name = 2;
  Meta meta = 3;
}

message FileUploadResponse {
  uint32 size = 1;
}

service File {
  rpc Upload(stream FileUploadRequest) returns (FileUploadResponse);
}

message MetaList {
  string uuid = 1;
  string type = 2;
  string name = 3;
  string fileName = 4;
  string createdAt = 5;
}

message MetaListRequest {
  
}

message MetaListResponse {
  repeated MetaList metaList = 1;
}

service List {
  rpc Get(MetaListRequest) returns (MetaListResponse);
}